module main(input clk);

wire [127:0] input_bytes = 128'h00112233445566778899aabbccddeeff;
// wire [127:0] expected128 =;
// wire [127:0] expected192= ;
// wire [127:0] expected256= ;

//1-Cipher with 128_key
reg [127:0] out128 ;
parameter NK_128 = 4;
parameter NR_128 = 10;
wire [32*NK_128-1:0] key128 = 128'h000102030405060708090a0b0c0d0e0f;
wire [128*(NR_128+1)-1:0] AllKeys128; 
KeyExpansion #(NK_128, NR_128) key_expander (key128, AllKeys128);
AES_Cipher #(NR_128) cipher (clk, input_bytes, AllKeys128, out128);

// //3-Cipher with 192_key
// parameter NK_192 = 6;
// parameter NR_192 = 12;
// wire [32*NK_192-1:0] key192;
// wire [128*(NR_192+1)-1:0] AllKeys192;
// KeyExpansion #(NK_192, NR_192) key_expander (key192, AllKeys192);
// AES_Cipher #(NR_192) cipher (clk, input_bytes, AllKeys192, output_bytes);

// //5-Cipher with 128_key
// parameter NK_256 = 8;
// parameter NR_256 = 14;
// wire [32*NK_256-1:0] key256;
// wire [128*(NR_256+1)-1:0] AllKeys256;
// KeyExpansion #(NK_256, NR_256) key_expander (key256, AllKeys256);
// AES_Cipher #(NR_256) cipher (clk, input_bytes, AllKeys256, output_bytes);


endmodule
